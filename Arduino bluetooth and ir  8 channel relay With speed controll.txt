String inputs;  
#include <IRremote.h>
int RECV_PIN = 11;
IRrecv irrecv(RECV_PIN);
decode_results results;
#define relay1 A0 //connect relay1 to pin 9  
#define relay2 A1 //connect relay2 to pin 8  
#define relay3 A2 //connect relay3 to pin 7  
#define relay4 A3 //connect relay4 to pin 6  
#define relay5 A4 //connect relay5 to pin 5  
#define relay6 A5 //connect relay6 to pin 4  
#define relay7 A6 //connect relay7 to pin 3  
#define relay8 A7 //connect relay8 to pin 2  
#include <TimerOne.h>           
volatile int i=0;               // Variable to use as a counter
volatile boolean zero_cross=0;  // Boolean to store a "switch" to tell us if we have crossed zero
int AC_pin = 5;                 // Output to Opto Triac

int dim2 = 0;                   // led control
int dim = 128;                  // Dimming level (0-128)  0 = on, 128 = 0ff                  
int freqStep = 75;    // This is the delay-per-brightness step in microseconds.

void setup(){  
  Serial.begin(9600); //set rate for communicating with phone  
  pinMode(relay1, OUTPUT); //set relay1 as an output  
  pinMode(relay2, OUTPUT); //set relay2 as an output  
  pinMode(relay3, OUTPUT); //set relay1 as an output  
  pinMode(relay4, OUTPUT); //set relay2 as an output  
  pinMode(relay5, OUTPUT); //set relay1 as an output  
  pinMode(relay6, OUTPUT); //set relay2 as an output  
  pinMode(relay7, OUTPUT); //set relay1 as an output  
  pinMode(relay8, OUTPUT); //set relay2 as an output  
  digitalWrite(relay1, LOW); //switch relay1 off  
  digitalWrite(relay2, LOW); //switch relay2 off  
  digitalWrite(relay3, LOW); //switch relay1 off  
  digitalWrite(relay4, LOW); //switch relay2 off  
  digitalWrite(relay5, LOW); //switch relay1 off  
  digitalWrite(relay6, LOW); //switch relay2 off  
  digitalWrite(relay7, LOW); //switch relay1 off  
  digitalWrite(relay8, LOW); //switch relay2 off  
   irrecv.enableIRIn(); // Start the IR receiver (classic remote)
  pinMode(AC_pin, OUTPUT);                          // Set the Triac pin as output
  attachInterrupt(0, zero_cross_detect, RISING);    // Attach an Interupt to Pin 2 (interupt 0) for Zero Cross Detection
  Timer1.initialize(freqStep);                      // Initialize TimerOne library for the freq we need
  Timer1.attachInterrupt(dim_check, freqStep);      
}

void zero_cross_detect() 
{    
  zero_cross = true;               // set the boolean to true to tell our dimming function that a zero cross has occured
  i=0;
  digitalWrite(AC_pin, LOW);
}                                 
// Turn on the TRIAC at the appropriate time

void dim_check() 
{                   
  if(zero_cross == true) {              
    if(i>=dim) {                     
      digitalWrite(AC_pin, HIGH);  // turn on light       
      i=0;  // reset time step counter                         
      zero_cross=false;    // reset zero cross detection
    } 
    else {
      i++;  // increment time step counter                     
}}}                                      


void translateIR() // takes action based on IR code received
{
  switch(results.value)
  {
  case 33464415:  
    {
   
    if (dim<127)  
   {
    dim = dim + 8;
    if (dim>127) 
    {
      dim=128; // in vechiul sketch era 127
    }
    }}
    
    break;

  case 33448095:  
    {
    
      {
  if (dim>5)  
  {
     dim = dim - 8;
  if (dim<0) 
    {
      dim=0;  // in vechiul sketch era 1
    } }}}
    break;
  }
}  
void loop(){ 
  if (irrecv.decode(&results)) // have we received an IR signal?
  {
    translateIR(); 
    irrecv.resume(); // receive the next value
  }   
  {
  if (irrecv.decode(&results)) {
    irrecv.resume();
  if (results.value == 0x807F8877 ) {
    digitalWrite(relay1, !digitalRead(A0));
    results.value = 0x00000000;
  }
  if (results.value == 0x807F48B7 ) {
    digitalWrite(relay2, !digitalRead(A1));
    results.value = 0x00000000;
  }
    if (results.value == 0x807FC837 ) {
  digitalWrite(relay3, !digitalRead(A2));
    results.value = 0x00000000;
  }
  if (results.value == 0x807F28D7 ) {
  digitalWrite(relay4, !digitalRead(A3));
    results.value = 0x00000000;
  }
    if (results.value == 0x807FA857 ) {
  digitalWrite(relay5, !digitalRead(A4));
    results.value = 0x00000000;
  }
  if (results.value == 0x807F6897 ) {
 digitalWrite(relay6, !digitalRead(A5));
    results.value = 0x00000000;
  }
    if (results.value == 0x807FE817 ) {
   digitalWrite(relay7, !digitalRead(A6));
    results.value = 0x00000000;
  }
  if (results.value == 0x807F18E7 ) {
    digitalWrite(relay8, !digitalRead(A7));
    results.value = 0x00000000;
    }
   }
  }
 
  while(Serial.available()){ //check if there are available bytes to read  
    delay(10); //delay to make it stable  
    char c = Serial.read(); //conduct a serial read  
    if (c == '#'){  
      break; //stop the loop once # is detected after a word  
    }  
    inputs += c; //means inputs = inputs + c  
  }  
  if (inputs.length() >0){  
    Serial.println(inputs);  
    if(inputs == "A"){  
      digitalWrite(relay1, LOW);  
    }  
    else if(inputs == "a"){  
      digitalWrite(relay1, HIGH);  
    }  
    else if(inputs == "B"){  
      digitalWrite(relay2, LOW);  
    }  
    else if(inputs == "b"){  
      digitalWrite(relay2, HIGH);  
    }  
    else if(inputs == "C"){  
      digitalWrite(relay3, LOW);  
    }  
    else if(inputs == "c"){  
      digitalWrite(relay3, HIGH);  
    }  
    else if(inputs == "D"){  
      digitalWrite(relay4, LOW);  
    }  
    else if(inputs == "d"){  
      digitalWrite(relay4, HIGH);  
    }  
    else if(inputs == "E"){  
      digitalWrite(relay5, LOW);  
    }  
    else if(inputs == "e"){  
      digitalWrite(relay5, HIGH);  
    }  
    else if(inputs == "F"){  
      digitalWrite(relay6, LOW);  
    }  
    else if(inputs == "f"){  
      digitalWrite(relay6, HIGH);  
    }  
    else if(inputs == "G"){  
      digitalWrite(relay7, LOW);  
    }  
    else if(inputs == "g"){  
      digitalWrite(relay7, HIGH);  
    }  
    else if(inputs == "H"){  
      digitalWrite(relay8, LOW);  
    }  
    else if(inputs == "h"){  
      digitalWrite(relay8, HIGH);  
    }  
    inputs="";  
  }  
}  